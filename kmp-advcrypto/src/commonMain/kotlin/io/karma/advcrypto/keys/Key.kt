/*
 * Copyright (c) 2024 Cach30verfl0w
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.karma.advcrypto.keys

/**
 * This interface represents every single key which can be generated by this library. These keys are
 * used to perform operations like signing or encrypting data etc.
 *
 * TODO: Return information about "accessibility by authentication" if possible
 *
 * @author Cedric Hammes
 * @since  07/06/2024
 */
@OptIn(ExperimentalStdlibApi::class)
interface Key: AutoCloseable {

    /**
     * This value represents the algorithm that was used to generate the key/the algorithm for which
     * this key was generated.
     *
     * @author Cedric Hammes
     * @since  07/06/2024
     */
    val algorithm: String

    /**
     * This value represents the purposes of this specific key. These purposes are used to ensure
     * the correct usage of the keys while encryption and signing.
     *
     * @author Cedric Hammes
     * @since  07/06/2024
     */
    val purposes: UByte

    companion object {
        const val PURPOSES_ALL: UByte = 0b0000_1111U
        const val PURPOSES_SYMMETRIC: UByte = 0b0000_1100U

        const val PURPOSE_VERIFY: UByte = 0b0000_0001U
        const val PURPOSE_SIGNING: UByte = 0b0000_0010U
        const val PURPOSE_ENCRYPT: UByte = 0b0000_0100U
        const val PURPOSE_DECRYPT: UByte = 0b0000_1000U
    }

}